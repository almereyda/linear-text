/* Buttonish classes are shared by other button-like components. */
.buttonish {
  /* Dimensions include border and padding. */
  box-sizing: border-box;

  min-width: var(--min-press-size);
  min-height: var(--min-press-size);

  /* Require buttons to be spaced apart so that misses don't interact with
     something else. */
  margin-top: var(--button-margin);
  margin-right: var(--button-margin);
  margin-bottom: var(--button-margin);
  margin-left: var(--button-margin);

  /* Add some spacing between the button content and the perimeter but account
     for border-width's contribution to --min-press-size. */
  padding-top: 5.5px;
  padding-right: 5.5px;
  padding-bottom: 5.5px;
  padding-left: 5.5px;

  /* Indicate button interactivity with a hand icon. */
  cursor: pointer;

  /* Buttons slightly extrude with rounded corners. */
  border-width: 0.5px;
  border-style: outset;
  border-color: var(--color-dark-grey);
  border-radius: var(--border-radius);

  /* Specify the background. */
  background-color: var(--color-grey);

  /* Inherit font. */
  font-family: inherit;
  font-size: inherit;
  font-stretch: inherit;
  font-style: inherit;
  font-variant: inherit;
  font-weight: inherit;
  line-height: inherit;

  /* Don't allow content highlights. */
  user-select: none;

  /* If content is an image, disable dragging. */
  -webkit-user-drag: none;

  /* Center the content. */
  text-align: center;

  /* For pseudo positioning. */
  position: relative;

  /* Button-likes may specify different display types. */
  display: inline-flex;

  /* Clear blue wash when interacting on mobile. */
  -webkit-tap-highlight-color: transparent;
}

.buttonish:active,
/* --active state can be held too. */
.buttonish--active {
  border-style: inset;
}

/* Tooltip. */
.buttonish[data-title]::after {
  /* Set the child to the value of the data-title attribute. */
  content: attr(data-title);

  font-size: var(--font-size-tooltip);

  /* Position to the bottom-left of the buttonish and remove from layout
     flow. */
  position: absolute;
  top: 100%;
  left: 0;

  /* Don't wrap the text. Width defaults to buttonish. */
  white-space: nowrap;

  /* Raise. */
  z-index: var(--z-index-tooltip);

  /* Use a dark theme for tooltips so they contrast from the base UI. */
  background-color: var(--color-darkest-grey);
  color: var(--color-white);

  /* Make card-like. */
  box-shadow: var(--box-shadow);
  border-radius: var(--border-radius);
  margin-top: var(--card-margin);
  margin-right: var(--card-margin);
  margin-bottom: var(--card-margin);
  margin-left: var(--card-margin);
  padding-top: var(--card-padding);
  padding-right: var(--card-padding);
  padding-bottom: var(--card-padding);
  padding-left: var(--card-padding);

  /* Hide by default. */
  visibility: hidden;

  /* Reset the tooltip show delay promptly. */
  transition-delay: 50ms;

  /* Ignore interactions. */
  pointer-events: none;
}

/* Limit tooltips to devices without sticky hover states:
   https://css-tricks.com/solving-sticky-hover-states-with-media-hover-hover/.
  */
@media (hover: hover) {
  .buttonish[data-title]:hover::after {
    /* Show after a long delay. */
    visibility: visible;
    transition-delay: 2s;
  }
}
